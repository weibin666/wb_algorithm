'''
题目描述
小R 负责解析 IP 报文头信息，现有一个十六进制格式的 IP 报文头数据，他需要从中解析并输出其中的 总长度、标志位以及目的 IP 地址，用逗号分隔。
IP 报文头信息依次包含多个字段，其中标识（16 位）和目的 IP 地址（32 位）是重点。输入数据为合法的十六进制 IP 报文头，固定长度为 59 个字符，每两个十六进制数字表示一个字节，字节之间以单空格分隔。
注：
- 报文数据为大端序（即高位字节在低地址）。
- 输出的总长度和标志位为十进制整数，目的 IP 地址为点分十进制格式（如 192.168.20.184）。
输入格式
第一行输入一个合法的十六进制 IP 报文头字符串 header，固定长度为 59 个字符，每两个十六进制数字表示一个字节，字节之间以单空格分隔。
1. header 的长度固定为 59 个字符，且合法。
2. 所有数据均为大端序。
输出格式
输出一个字符串，包含解析后的总长度、标志位和目的 IP 地址，中间用逗号分隔。
样例
样例1
样例输入：
45 00 10 3c 7c 48 20 03 80 06 00 00 c0 a8 01 02 c0 a8 14 b8
样例输出：
4156,1,192.168.20.184
样例2
样例输入：
4b ba 0d 15 d0 42 16 bc 50 25 38 33 cb e0 77 ed 56 a4 30 46
样例输出：
3349,0,86.164.48.70
样例3
样例输入：
f7 87 78 be cf bf ae 9e d6 bc b1 5f 38 2c 07 37 95 f8 32 c5
样例输出：
30910,5,149.248.50.197
'''
from typing import List


class Solution:
    def ip_parse(self, header: str) -> str:
        """
        解析十六进制格式的 IP 报文头信息，并提取总长度、标志位和目的 IP 地址。

        参数:
            header (str): 十六进制表示的 IP 报文头字符串，每两个字符表示一个字节，字节之间以空格分隔。

        返回:
            str: 包含总长度、标志位和目的 IP 地址的字符串，格式为 "总长度,标志位,目的IP地址"。
        """
        # 将输入字符串按空格分割，并将每个十六进制字符串转换为十进制整数，生成一个列表
        ls = list(map(lambda x: int(x, 16), header.split()))

        # 第 3 和第 4 字节表示总长度（大端序），合并为一个 16 位整数
        # 左移第 3 字节 8 位，加上第 4 字节的值
        sz = ls[2] << 8 | ls[3]

        # 第 7 字节的高 3 位表示标志位，通过右移 5 位提取高 3 位
        flag = ls[6] >> 5

        # 最后 4 个字节表示目的 IP 地址，将其转换为点分十进制格式
        # 使用 map 将字节转换为字符串，并用 "." 连接
        ip = ".".join(map(str, ls[-4:]))

        # 格式化输出，将总长度、标志位和目的 IP 地址用逗号分隔
        return "{},{},{}".format(sz, flag, ip)


if __name__ == '__main__':
    sol = Solution()
    header = input()
    print(sol.ip_parse(header))
